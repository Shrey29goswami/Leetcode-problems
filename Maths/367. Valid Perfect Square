********************************************
Problem Description : (Leetcode Easy)
********************************************
367. Valid Perfect Square

Companies : LinkedIn Google

Given a positive integer num, return true if num is a perfect square or false otherwise.
A perfect square is an integer that is the square of an integer. In other words, it is the product of some integer 
with itself.
You must not use any built-in library function, such as sqrt.

Example 1:
Input: num = 16
Output: true
Explanation: We return true because 4 * 4 = 16 and 4 is an integer.

Example 2:
Input: num = 14
Output: false
Explanation: We return false because 3.742 * 3.742 = 14 and 3.742 is not an integer.
 

Constraints:

1 <= num <= 2^31 - 1

**********************************************************************************
Solution : (Time Complexity :- O(log n), Space complexity :- O(1))
**********************************************************************************

#include <iostream>
using namespace std;

class Solution {
public:
    bool isPerfectSquare(int num) {
        int low = 1, high = num;

        while(low <= high){
            long long mid = low + (high-low)/2;
            if(mid * mid == num){
                return true;
            }else if(mid * mid > num){
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        return false;

    }
};
int main(){
    int n;
    cout << "Enter num : ";
    cin >> n;
    
    
    Solution obj;
    if(obj.isPerfectSquare(n)){
        cout << "Yes, it is a Perfect Square!!";
    }else{
        cout << "No, it is not a Perfect Square!!";
    }
    return 0;
}
