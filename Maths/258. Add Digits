************************************************************
Problem Description : (Leetcode Easy)
************************************************************
258. Add Digits
Companies : Bloomberg

Given an integer num, repeatedly add all its digits until the result has only one digit, and return it.

Example 1:
Input: num = 38
Output: 2
Explanation: The process is
38 --> 3 + 8 --> 11
11 --> 1 + 1 --> 2 
Since 2 has only one digit, return it.

Example 2:
Input: num = 0
Output: 0
 
Constraints:
0 <= num <= 2^31 - 1
 
Follow up: Could you do it without any loop/recursion in O(1) runtime?

************************************************************************
Solution : (Time Complexity :- O(log(10)n), Space Complexity :- O(1))
************************************************************************


#include <iostream>
using namespace std;

class Solution {
public:
    int addDigits(int num) {
        if(num < 10){
            return num;
        }
        while(num >= 10){
            int sum = 0;
            while(num > 0 ){
                int temp = num % 10;
                sum += temp;
                num /= 10;
            }
            num = sum;
        }
        return num;
        //return num == 0 ? 0 : 1 + (num-1) % 9;
    }
};

int main(){
    int n;
    cin >> n;
    
    Solution obj;
    cout << obj.addDigits(n);
    return 0;
}
