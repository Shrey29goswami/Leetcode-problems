************************************************
Problem Description : (Leetcode Medium)
************************************************
1358. Number of Substrings Containing All Three Characters
Companies : Microsoft Adobe DE Shaw

Given a string s consisting only of characters a, b and c.
Return the number of substrings containing at least one occurrence of all these characters a, b and c.

Example 1:
Input: s = "abcabc"
Output: 10
Explanation: The substrings containing at least one occurrence of the characters a, b and c are "abc", "abca", "abcab", "abcabc", "bca", "bcab", "bcabc", "cab", "cabc" and "abc" (again). 

Example 2:
Input: s = "aaacb"
Output: 3
Explanation: The substrings containing at least one occurrence of the characters a, b and c are "aaacb", "aacb" and "acb". 

Example 3:
Input: s = "abc"
Output: 1
 
Constraints:
3 <= s.length <= 5 x 10^4
s only consists of a, b or c characters.

******************************************************************
Solution : (Time Complexity : O(n), Space Complexity : O(1))
******************************************************************
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class Solution {
public:
    int numberOfSubstrings(string s) {
        int n = s.size();
        int cnt = 0;
        vector<int> last(3, -1);  
        
        for (int i = 0; i < n; i++) {
            last[s[i] - 'a'] = i;
            if (last[0] != -1 && last[1] != -1 && last[2] != -1) {
                cnt += 1 + min({last[0], last[1], last[2]});
            }
        }
        return cnt;
    }
};
int main(){
    string s;
    cout << "Enter the string s : ";
    cin >> s;
    
    Solution ob;
    cout << "Count of Sub-Strings : "<<ob.numberOfSubstrings(s);
    return 0;
}
