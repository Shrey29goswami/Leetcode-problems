**************************************************
Problem Description : (Leetcode Easy)
**************************************************
118. Pascal's Triangle
Companies : Amazon Apple Microsoft Goldman Sachs Snapchat
Given an integer numRows, return the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:
Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

Example 2:
Input: numRows = 1
Output: [[1]]
 
Constraints:
1 <= numRows <= 30

********************************************************************
Solution : (Time Complexity :- O(n^2), Space Complexity :- O(n^2))
********************************************************************

#include <iostream>
#include <vector>

using namespace std;

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans;
        
        for(int i = 0; i < numRows; i++) {
            vector<int> row(i + 1, 1); 
            
            for(int j = 1; j < i; j++) {
                row[j] = ans[i - 1][j - 1] + ans[i - 1][j];
            }
            
            ans.push_back(row);
        }
        
        return ans;
    }
};

int main(){
    int n;
    cout << "Enter the value of n : ";
    cin >> n;
    
    
    
    Solution obj;
    cout << "Pascal triangle : "<<endl ;
    
    vector<vector<int>> ans = obj.generate(n);
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            cout << ans[i][j] << " ";
        }
        
        cout << endl;
    }
    
    return 0;
}
