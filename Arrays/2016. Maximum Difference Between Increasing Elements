Problem Description : (Leetcode Easy)
++++++++++++++++++++++++++++++++++++++
Given a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i.e.,
nums[j] - nums[i]), such that 0 <= i < j < n and nums[i] < nums[j].
Return the maximum difference. If no such i and j exists, return -1.

Example 1:
Input: nums = [7,1,5,4]
Output: 4
Explanation:
The maximum difference occurs with i = 1 and j = 2, nums[j] - nums[i] = 5 - 1 = 4.
Note that with i = 1 and j = 0, the difference nums[j] - nums[i] = 7 - 1 = 6, but i > j, so it is not valid.

Example 2:
Input: nums = [9,4,3,2]
Output: -1
Explanation:
There is no i and j such that i < j and nums[i] < nums[j].

Example 3:
Input: nums = [1,5,2,10]
Output: 9
Explanation:
The maximum difference occurs with i = 0 and j = 3, nums[j] - nums[i] = 10 - 1 = 9.
 
Constraints:
n == nums.length
2 <= n <= 1000
1 <= nums[i] <= 10^9

Solution : (Time Complexity :- O(n), Space Complexity :- O(1))
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int maximumDifference(vector<int>& nums) {
        int j = 0;
        int diff = 0, max_diff = -1;
        for(int i = 1; i < nums.size(); i++){
            if(nums[j] < nums[i]){
                diff = nums[i] - nums[j];
                max_diff = max(max_diff, diff);
            }else if(nums[i] < nums[j]){
                j = i;
            }
        }
        return max_diff;
    }
};

int main()
{
    std::cout<<"Hello World"<<endl;
    
    int n;
    cout<<"Enter the value of n :"<<endl;
    cin>>n;
    
    vector<int> nums(n);
    cout<<"Enter the nums array elements :"<<endl;
    for(int i = 0; i < n; i++){
        cin>>nums[i];
    }
    
    Solution* obj = new Solution();
    cout<<"Max Difference : "<<obj->maximumDifference(nums)<<endl;
    
    return 0;
}
