*****************************************************************
Problem Description : (Leetcode Easy)
*****************************************************************

812. Largest Triangle Area
Companies : Google

Given an array of points on the X-Y plane points where points[i] = [xi, yi], return the area of the largest 
triangle that can be formed by any three different points. Answers within 10-5 of the actual answer will be
accepted.

Example 1:
Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
Output: 2.00000
Explanation: The five points are shown in the above figure. The red triangle is the largest.

Example 2:
Input: points = [[1,0],[0,0],[0,1]]
Output: 0.50000
 
Constraints:
3 <= points.length <= 50
-50 <= xi, yi <= 50
All the given points are unique.

*****************************************************************
Solution : Time Complexity : O(n*n*n), Space Complexity : O(1))
*****************************************************************


#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

class Solution {
public:
    double largestTriangleArea(vector<vector<int>>& points) {
        int n = points.size();
        double maxArea = 0.0;

        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    double x1 = points[i][0], y1 = points[i][1];
                    double x2 = points[j][0], y2 = points[j][1];
                    double x3 = points[k][0], y3 = points[k][1];

                    double area = 0.5 * fabs(x1*(y2 - y3) + x2*(y3 - y1) + x3*(y1 - y2));

                    maxArea = max(maxArea, area);
                }
            }
        }
        return maxArea;
    }
};

int main()
{
    int n;
    cout << "Enter the value of n : ";
    cin >> n;
    
    vector<vector<int>> points(n, vector<int>(2));
    cout << "Enter the points array : ";
    for(int i = 0; i < n; i++){
        cin >> points[i][0] >> points[i][1];
    }
    
    Solution ob;
    cout << "Maximum area : "<<ob.largestTriangleArea(points);

    return 0;
}
