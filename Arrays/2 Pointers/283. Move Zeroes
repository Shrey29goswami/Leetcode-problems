****************************************************************
Problem Description : (Leetcode Easy)
****************************************************************
283. Move Zeroes
Companies : Facebook Microsoft Apple Amazon Yandex

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:
Input: nums = [0]
Output: [0]
 
Constraints:
1 <= nums.length <= 10^4
-2^31 <= nums[i] <= 2^31 - 1
 
Follow up: Could you minimize the total number of operations done?

****************************************************************
Solution : (Time Complexity : O(n), Space Complexity : O(1))
****************************************************************

#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int j = 0;
        for(int i = 0; i < nums.size(); i++){
            
            if(nums[i] != 0){
                swap(nums[i], nums[j]);
                j++;
            }
        }
       
    }
};


int main(){
    int n;
    cout << "Enter the value of n : ";
    cin >> n;
    
    vector<int> nums(n);
    cout << "Enter the array :";
    for(int i = 0; i < n; i++){
        cin >> nums[i];
    }
    
    Solution ob;
    ob.moveZeroes(nums);
    
    cout << "Resultant array : ";
    for(int c : nums){
        cout << c << " ";
    }

    return 0;
}
