*********************************************************
Problem Description : (Leetcode Easy)
*********************************************************
217. Contains Duplicate
Companies : Amazon Adobe Google Apple Microsoft

Given an integer array nums, return true if any value appears at least twice in the array, and return false if every 
element is distinct.

Example 1:
Input: nums = [1,2,3,1]
Output: true
Explanation:
The element 1 occurs at the indices 0 and 3.

Example 2:
Input: nums = [1,2,3,4]
Output: false
Explanation:
All elements are distinct.

Example 3:
Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true
 
Constraints:
1 <= nums.length <= 10^5
-10^9 <= nums[i] <= 10^9

*************************************************************
Solution : (Time complexity : O(n), Space Complexity : O(1))
*************************************************************

#include <iostream>
#include <vector>
#include <unordered_set>

using namespace std;

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_set<int> freq;
        for (int num : nums) {
            if (freq.count(num) > 0)
                return true;
            freq.insert(num);
        
        }
        return false;
    }
};

int main()
{
    int n;
    cout << "Enter the size of array : ";
    cin >> n;
    
    vector<int> nums(n);
    cout << "Enter the nums array : ";
    for(int i = 0; i < n; i++){
        cin >> nums[i];
    }
    Solution ob;
    if(ob.containsDuplicate(nums)){
        cout << "Yes, it contains Duplicates.";
    }else{
        cout << "No, it doesn't contains Duplicates.";
    }

    return 0;
}
