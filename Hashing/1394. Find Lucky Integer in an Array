**************************************
Problem Description : (Leetcode Easy)
**************************************
Given an array of integers arr, a lucky integer is an integer that has a frequency in the array equal to its value.
Return the largest lucky integer in the array. If there is no lucky integer return -1.

Example 1:
Input: arr = [2,2,3,4]
Output: 2
Explanation: The only lucky number in the array is 2 because frequency[2] == 2.

Example 2:
Input: arr = [1,2,2,3,3,3]
Output: 3
Explanation: 1, 2 and 3 are all lucky numbers, return the largest of them.

Example 3:
Input: arr = [2,2,2,3,3]
Output: -1
Explanation: There are no lucky numbers in the array.
 
Constraints:
1 <= arr.length <= 500
1 <= arr[i] <= 500

*************************************************************************
Solution : (Time Complexity :- O(n), Space Complexity :- O(n))
*************************************************************************
#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
using namespace std;

class Solution {
public:
    int findLucky(vector<int>& arr) {
        unordered_map<int, int> mp;
        for(int c : arr){
            mp[c]++;
        }

        int temp, result = 0;
        for(auto &it : mp){
            if(it.first == it.second){
                result = max(result, it.first);
            }

        } 
        if(result == 0){
            result = -1;
        }
        return result;
    }
};

int main()
{
    int n;
    cout << "Enter the value of n : ";
    cin >> n;
    
    vector<int> arr(n);
    cout<< "Enter the elements of array : ";
    for(int i = 0; i < n; i++){
        cin >> arr[i];
    }
    
    Solution* obj = new Solution();
    cout << "Lucky number is : "<< obj->findLucky(arr);
    
    return 0;
}
***************************************************************************
Optimal Solution : (Time Complexity :- O(n), Space Complexity :- O(1))
***************************************************************************
#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
using namespace std;

class Solution {
public:
    int findLucky(vector<int>& arr) {
        int mp[501] = {0};
        
        for(int i : mp){
            mp[i]++;
        }
        
        for(int i = 501; i >= 0; i--){
            if(mp[i] == i){
                return i;
            }
        }
        return -1;
    }
};

int main()
{
    int n;
    cout << "Enter the value of n : ";
    cin >> n;
    
    vector<int> arr(n);
    cout<< "Enter the elements of array : ";
    for(int i = 0; i < n; i++){
        cin >> arr[i];
    }
    
    Solution* obj = new Solution();
    cout << "Lucky number is : "<< obj->findLucky(arr);
    
    return 0;
}
