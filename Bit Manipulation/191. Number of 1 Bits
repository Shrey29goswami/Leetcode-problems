*************************************************************
Problem Description : (Leetcode Easy)
*************************************************************
191. Number of 1 Bits
Companies : Box Facebook Cisco Amazon Google

Given a positive integer n, write a function that returns the number of set bits in its binary representation 
(also known as the Hamming weight).

Example 1:
Input: n = 11
Output: 3
Explanation:
The input binary string 1011 has a total of three set bits.

Example 2:
Input: n = 128
Output: 1
Explanation:
The input binary string 10000000 has a total of one set bit.

Example 3:
Input: n = 2147483645
Output: 30
Explanation:
The input binary string 1111111111111111111111111111101 has a total of thirty set bits.

Constraints:
1 <= n <= 2^31 - 1
 
Follow up: If this function is called many times, how would you optimize it?

******************************************************************
Solution : (Time Complexity : O(log n), Space Complexity : O(1))
******************************************************************


#include <iostream>
using namespace std;

class Solution {
public:
    int hammingWeight(int n) {
        string s = "";
        int count = 0;
        while(n > 0){
            if(n % 2 == 1){
                count++;
            }
            n /= 2;
        }

        return count;
    }
};

int main()
{
    int n;
    cout << "Enter the number n : ";
    cin >> n;
    
    Solution ob;
    cout << "Number of set bits in "<< n <<" is : "<< ob.hammingWeight(n);

    return 0;
}
